import React, { useState } from 'react';
import BookModal from './bookModal';
import { useNavigate } from 'react-router-dom';

const CreateStackPage = () => {
  const [stackName, setStackName] = useState('');
  const [description, setDescription] = useState('');
  const [coverImage, setCoverImage] = useState(null);
  const [books, setBooks] = useState([]);
  const [isModalOpen, setIsModalOpen] = useState(false);
const navigate = useNavigate()
  const availableBooks = [
    { id: 1, title: 'Name of Book', author: 'Author name' },
    { id: 2, title: 'Name of Book', author: 'Author name' },
    { id: 3, title: 'Name of Book', author: 'Author name' },
    { id: 4, title: 'Name of Book', author: 'Author name' },
  ];

  const handleAddBook = () => {
    setIsModalOpen(true);
  };

  const handleSelectBook = (book) => {
    setBooks([...books, book]);
    setIsModalOpen(false);
  };

  const handleConfirm = () => {
    console.log('Stack Created:', { stackName, description, coverImage, books });
    navigate(-1)
    
  };

  return (
    <div className="p-6 max-w-lg mx-auto">
      <h1 className="text-3xl font-bold mb-6">Create Stack</h1>
      <div className="mb-4">
        <h2 className="font-semibold mb-2">Step 1: Give it a Name</h2>
        <input
          type="text"
          placeholder="Enter stack name"
          value={stackName}
          onChange={(e) => setStackName(e.target.value)}
          className="w-full p-2 border border-gray-300 rounded"
        />
      </div>
      <div className="mb-4">
        <h2 className="font-semibold mb-2">Step 2: Add a Description</h2>
        <textarea
          placeholder="Enter description"
          value={description}
          onChange={(e) => setDescription(e.target.value)}
          className="w-full p-2 border border-gray-300 rounded h-24"
        />
      </div>
      <div className="mb-4">
        <h2 className="font-semibold mb-2">Step 3: Select Cover Image</h2>
        <p className="text-sm text-gray-500 mb-2">Automatically generated by the description</p>
        <div className="grid grid-cols-4 gap-2">
          {[1, 2, 3, 4].map((num) => (
            <div key={num} className="border border-dashed border-gray-300 rounded h-24 flex items-center justify-center">
              <input
                type="radio"
                name="coverImage"
                onChange={() => setCoverImage(num)}
                checked={coverImage === num}
                className="cursor-pointer"
              />
            </div>
          ))}
        </div>
      </div>
      <div className="mb-6">
        <h2 className="font-semibold mb-2">Step 4: Add Books</h2>
        <div className="grid grid-cols-4 gap-2">
          {books.map((book) => (
            <div key={book.id} className="border border-dashed border-gray-300 rounded h-24 flex items-center justify-center">
              <span className="text-blue-500">{book.title}</span>
            </div>
          ))}
          <button
            type="button"
            onClick={handleAddBook}
            className="border border-dashed border-gray-300 rounded h-24 flex items-center justify-center text-blue-500"
          >
            + Add Book
          </button>
        </div>
      </div>
      <div className="flex justify-between">
        <button
          type="button"
          className="px-4 py-2 border border-gray-300 rounded bg-white text-gray-700 hover:bg-gray-100"
          onClick={() => navigate(-1)}
        >
          Cancel
        </button>
        <button
          type="button"
          onClick={handleConfirm}
          className="px-4 py-2 border border-teal-500 rounded bg-teal-500 text-white hover:bg-teal-600"
        >
          Confirm
        </button>
      </div>
      <BookModal
        isOpen={isModalOpen}
        onClose={() => setIsModalOpen(false)}
        onSelectBook={handleSelectBook}
        books={availableBooks}
      />
    </div>
  );
};

export default CreateStackPage;
